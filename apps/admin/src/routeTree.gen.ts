/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated.index'
import { Route as GuestLoginRouteImport } from './routes/_guest.login'
import { Route as AuthenticatedUsersRouteImport } from './routes/_authenticated.users'
import { Route as AuthenticatedTeamsRouteImport } from './routes/_authenticated.teams'
import { Route as AuthenticatedArtifactsRouteImport } from './routes/_authenticated.artifacts'
import { Route as AuthenticatedAccountRouteImport } from './routes/_authenticated.account'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated.users.index'
import { Route as AuthenticatedTeamsIndexRouteImport } from './routes/_authenticated.teams.index'
import { Route as AuthenticatedArtifactsIndexRouteImport } from './routes/_authenticated.artifacts.index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth.$'
import { Route as AuthenticatedUsersUserIdRouteImport } from './routes/_authenticated.users.$userId'
import { Route as AuthenticatedTeamsTeamIdRouteImport } from './routes/_authenticated.teams.$teamId'
import { Route as AuthenticatedAccountApiKeysRouteImport } from './routes/_authenticated.account.api-keys'
import { Route as AuthenticatedAccountApiKeysIndexRouteImport } from './routes/_authenticated.account.api-keys.index'
import { Route as ApiV8ArtifactsSplatRouteImport } from './routes/api/v8.artifacts.$'

const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)
const AuthenticatedUsersRoute = AuthenticatedUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTeamsRoute = AuthenticatedTeamsRouteImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedArtifactsRoute = AuthenticatedArtifactsRouteImport.update({
  id: '/artifacts',
  path: '/artifacts',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAccountRoute = AuthenticatedAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedUsersRoute,
} as any)
const AuthenticatedTeamsIndexRoute = AuthenticatedTeamsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedTeamsRoute,
} as any)
const AuthenticatedArtifactsIndexRoute =
  AuthenticatedArtifactsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedArtifactsRoute,
  } as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUsersUserIdRoute =
  AuthenticatedUsersUserIdRouteImport.update({
    id: '/$userId',
    path: '/$userId',
    getParentRoute: () => AuthenticatedUsersRoute,
  } as any)
const AuthenticatedTeamsTeamIdRoute =
  AuthenticatedTeamsTeamIdRouteImport.update({
    id: '/$teamId',
    path: '/$teamId',
    getParentRoute: () => AuthenticatedTeamsRoute,
  } as any)
const AuthenticatedAccountApiKeysRoute =
  AuthenticatedAccountApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => AuthenticatedAccountRoute,
  } as any)
const AuthenticatedAccountApiKeysIndexRoute =
  AuthenticatedAccountApiKeysIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAccountApiKeysRoute,
  } as any)
const ApiV8ArtifactsSplatRoute = ApiV8ArtifactsSplatRouteImport.update({
  id: '/api/v8/artifacts/$',
  path: '/api/v8/artifacts/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/account': typeof AuthenticatedAccountRouteWithChildren
  '/artifacts': typeof AuthenticatedArtifactsRouteWithChildren
  '/teams': typeof AuthenticatedTeamsRouteWithChildren
  '/users': typeof AuthenticatedUsersRouteWithChildren
  '/login': typeof GuestLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/account/api-keys': typeof AuthenticatedAccountApiKeysRouteWithChildren
  '/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/artifacts/': typeof AuthenticatedArtifactsIndexRoute
  '/teams/': typeof AuthenticatedTeamsIndexRoute
  '/users/': typeof AuthenticatedUsersIndexRoute
  '/api/v8/artifacts/$': typeof ApiV8ArtifactsSplatRoute
  '/account/api-keys/': typeof AuthenticatedAccountApiKeysIndexRoute
}
export interface FileRoutesByTo {
  '/account': typeof AuthenticatedAccountRouteWithChildren
  '/login': typeof GuestLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/artifacts': typeof AuthenticatedArtifactsIndexRoute
  '/teams': typeof AuthenticatedTeamsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/api/v8/artifacts/$': typeof ApiV8ArtifactsSplatRoute
  '/account/api-keys': typeof AuthenticatedAccountApiKeysIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_authenticated/account': typeof AuthenticatedAccountRouteWithChildren
  '/_authenticated/artifacts': typeof AuthenticatedArtifactsRouteWithChildren
  '/_authenticated/teams': typeof AuthenticatedTeamsRouteWithChildren
  '/_authenticated/users': typeof AuthenticatedUsersRouteWithChildren
  '/_guest/login': typeof GuestLoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/account/api-keys': typeof AuthenticatedAccountApiKeysRouteWithChildren
  '/_authenticated/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/_authenticated/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_authenticated/artifacts/': typeof AuthenticatedArtifactsIndexRoute
  '/_authenticated/teams/': typeof AuthenticatedTeamsIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/api/v8/artifacts/$': typeof ApiV8ArtifactsSplatRoute
  '/_authenticated/account/api-keys/': typeof AuthenticatedAccountApiKeysIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/account'
    | '/artifacts'
    | '/teams'
    | '/users'
    | '/login'
    | '/'
    | '/account/api-keys'
    | '/teams/$teamId'
    | '/users/$userId'
    | '/api/auth/$'
    | '/artifacts/'
    | '/teams/'
    | '/users/'
    | '/api/v8/artifacts/$'
    | '/account/api-keys/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/account'
    | '/login'
    | '/'
    | '/teams/$teamId'
    | '/users/$userId'
    | '/api/auth/$'
    | '/artifacts'
    | '/teams'
    | '/users'
    | '/api/v8/artifacts/$'
    | '/account/api-keys'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_guest'
    | '/_authenticated/account'
    | '/_authenticated/artifacts'
    | '/_authenticated/teams'
    | '/_authenticated/users'
    | '/_guest/login'
    | '/_authenticated/'
    | '/_authenticated/account/api-keys'
    | '/_authenticated/teams/$teamId'
    | '/_authenticated/users/$userId'
    | '/api/auth/$'
    | '/_authenticated/artifacts/'
    | '/_authenticated/teams/'
    | '/_authenticated/users/'
    | '/api/v8/artifacts/$'
    | '/_authenticated/account/api-keys/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiV8ArtifactsSplatRoute: typeof ApiV8ArtifactsSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_authenticated/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/teams': {
      id: '/_authenticated/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AuthenticatedTeamsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/artifacts': {
      id: '/_authenticated/artifacts'
      path: '/artifacts'
      fullPath: '/artifacts'
      preLoaderRoute: typeof AuthenticatedArtifactsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/account': {
      id: '/_authenticated/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedUsersRoute
    }
    '/_authenticated/teams/': {
      id: '/_authenticated/teams/'
      path: '/'
      fullPath: '/teams/'
      preLoaderRoute: typeof AuthenticatedTeamsIndexRouteImport
      parentRoute: typeof AuthenticatedTeamsRoute
    }
    '/_authenticated/artifacts/': {
      id: '/_authenticated/artifacts/'
      path: '/'
      fullPath: '/artifacts/'
      preLoaderRoute: typeof AuthenticatedArtifactsIndexRouteImport
      parentRoute: typeof AuthenticatedArtifactsRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdRouteImport
      parentRoute: typeof AuthenticatedUsersRoute
    }
    '/_authenticated/teams/$teamId': {
      id: '/_authenticated/teams/$teamId'
      path: '/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof AuthenticatedTeamsTeamIdRouteImport
      parentRoute: typeof AuthenticatedTeamsRoute
    }
    '/_authenticated/account/api-keys': {
      id: '/_authenticated/account/api-keys'
      path: '/api-keys'
      fullPath: '/account/api-keys'
      preLoaderRoute: typeof AuthenticatedAccountApiKeysRouteImport
      parentRoute: typeof AuthenticatedAccountRoute
    }
    '/_authenticated/account/api-keys/': {
      id: '/_authenticated/account/api-keys/'
      path: '/'
      fullPath: '/account/api-keys/'
      preLoaderRoute: typeof AuthenticatedAccountApiKeysIndexRouteImport
      parentRoute: typeof AuthenticatedAccountApiKeysRoute
    }
    '/api/v8/artifacts/$': {
      id: '/api/v8/artifacts/$'
      path: '/api/v8/artifacts/$'
      fullPath: '/api/v8/artifacts/$'
      preLoaderRoute: typeof ApiV8ArtifactsSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedAccountApiKeysRouteChildren {
  AuthenticatedAccountApiKeysIndexRoute: typeof AuthenticatedAccountApiKeysIndexRoute
}

const AuthenticatedAccountApiKeysRouteChildren: AuthenticatedAccountApiKeysRouteChildren =
  {
    AuthenticatedAccountApiKeysIndexRoute:
      AuthenticatedAccountApiKeysIndexRoute,
  }

const AuthenticatedAccountApiKeysRouteWithChildren =
  AuthenticatedAccountApiKeysRoute._addFileChildren(
    AuthenticatedAccountApiKeysRouteChildren,
  )

interface AuthenticatedAccountRouteChildren {
  AuthenticatedAccountApiKeysRoute: typeof AuthenticatedAccountApiKeysRouteWithChildren
}

const AuthenticatedAccountRouteChildren: AuthenticatedAccountRouteChildren = {
  AuthenticatedAccountApiKeysRoute:
    AuthenticatedAccountApiKeysRouteWithChildren,
}

const AuthenticatedAccountRouteWithChildren =
  AuthenticatedAccountRoute._addFileChildren(AuthenticatedAccountRouteChildren)

interface AuthenticatedArtifactsRouteChildren {
  AuthenticatedArtifactsIndexRoute: typeof AuthenticatedArtifactsIndexRoute
}

const AuthenticatedArtifactsRouteChildren: AuthenticatedArtifactsRouteChildren =
  {
    AuthenticatedArtifactsIndexRoute: AuthenticatedArtifactsIndexRoute,
  }

const AuthenticatedArtifactsRouteWithChildren =
  AuthenticatedArtifactsRoute._addFileChildren(
    AuthenticatedArtifactsRouteChildren,
  )

interface AuthenticatedTeamsRouteChildren {
  AuthenticatedTeamsTeamIdRoute: typeof AuthenticatedTeamsTeamIdRoute
  AuthenticatedTeamsIndexRoute: typeof AuthenticatedTeamsIndexRoute
}

const AuthenticatedTeamsRouteChildren: AuthenticatedTeamsRouteChildren = {
  AuthenticatedTeamsTeamIdRoute: AuthenticatedTeamsTeamIdRoute,
  AuthenticatedTeamsIndexRoute: AuthenticatedTeamsIndexRoute,
}

const AuthenticatedTeamsRouteWithChildren =
  AuthenticatedTeamsRoute._addFileChildren(AuthenticatedTeamsRouteChildren)

interface AuthenticatedUsersRouteChildren {
  AuthenticatedUsersUserIdRoute: typeof AuthenticatedUsersUserIdRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedUsersRouteChildren: AuthenticatedUsersRouteChildren = {
  AuthenticatedUsersUserIdRoute: AuthenticatedUsersUserIdRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedUsersRouteWithChildren =
  AuthenticatedUsersRoute._addFileChildren(AuthenticatedUsersRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedAccountRoute: typeof AuthenticatedAccountRouteWithChildren
  AuthenticatedArtifactsRoute: typeof AuthenticatedArtifactsRouteWithChildren
  AuthenticatedTeamsRoute: typeof AuthenticatedTeamsRouteWithChildren
  AuthenticatedUsersRoute: typeof AuthenticatedUsersRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAccountRoute: AuthenticatedAccountRouteWithChildren,
  AuthenticatedArtifactsRoute: AuthenticatedArtifactsRouteWithChildren,
  AuthenticatedTeamsRoute: AuthenticatedTeamsRouteWithChildren,
  AuthenticatedUsersRoute: AuthenticatedUsersRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface GuestRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiV8ArtifactsSplatRoute: ApiV8ArtifactsSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.ts'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
