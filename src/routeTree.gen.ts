/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteRouteImport } from './routes/_guest/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as GuestLoginRouteImport } from './routes/_guest/login'
import { Route as AuthenticatedUsersRouteRouteImport } from './routes/_authenticated/users.route'
import { Route as AuthenticatedTeamsRouteRouteImport } from './routes/_authenticated/teams.route'
import { Route as AuthenticatedArtifactsRouteRouteImport } from './routes/_authenticated/artifacts.route'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users.index'
import { Route as AuthenticatedTeamsIndexRouteImport } from './routes/_authenticated/teams.index'
import { Route as AuthenticatedArtifactsIndexRouteImport } from './routes/_authenticated/artifacts.index'
import { Route as AuthenticatedUsersUserIdRouteImport } from './routes/_authenticated/users.$userId'
import { Route as AuthenticatedTeamsTeamIdRouteImport } from './routes/_authenticated/teams.$teamId'
import { Route as AuthenticatedArtifactsArtifactIdRouteImport } from './routes/_authenticated/artifacts.$artifactId'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const GuestRouteRoute = GuestRouteRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRouteRoute,
} as any)
const AuthenticatedUsersRouteRoute = AuthenticatedUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTeamsRouteRoute = AuthenticatedTeamsRouteRouteImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedArtifactsRouteRoute =
  AuthenticatedArtifactsRouteRouteImport.update({
    id: '/artifacts',
    path: '/artifacts',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedUsersRouteRoute,
} as any)
const AuthenticatedTeamsIndexRoute = AuthenticatedTeamsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedTeamsRouteRoute,
} as any)
const AuthenticatedArtifactsIndexRoute =
  AuthenticatedArtifactsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedArtifactsRouteRoute,
  } as any)
const AuthenticatedUsersUserIdRoute =
  AuthenticatedUsersUserIdRouteImport.update({
    id: '/$userId',
    path: '/$userId',
    getParentRoute: () => AuthenticatedUsersRouteRoute,
  } as any)
const AuthenticatedTeamsTeamIdRoute =
  AuthenticatedTeamsTeamIdRouteImport.update({
    id: '/$teamId',
    path: '/$teamId',
    getParentRoute: () => AuthenticatedTeamsRouteRoute,
  } as any)
const AuthenticatedArtifactsArtifactIdRoute =
  AuthenticatedArtifactsArtifactIdRouteImport.update({
    id: '/$artifactId',
    path: '/$artifactId',
    getParentRoute: () => AuthenticatedArtifactsRouteRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/artifacts': typeof AuthenticatedArtifactsRouteRouteWithChildren
  '/teams': typeof AuthenticatedTeamsRouteRouteWithChildren
  '/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/login': typeof GuestLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/artifacts/$artifactId': typeof AuthenticatedArtifactsArtifactIdRoute
  '/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/artifacts/': typeof AuthenticatedArtifactsIndexRoute
  '/teams/': typeof AuthenticatedTeamsIndexRoute
  '/users/': typeof AuthenticatedUsersIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof GuestLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/artifacts/$artifactId': typeof AuthenticatedArtifactsArtifactIdRoute
  '/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/artifacts': typeof AuthenticatedArtifactsIndexRoute
  '/teams': typeof AuthenticatedTeamsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_authenticated/artifacts': typeof AuthenticatedArtifactsRouteRouteWithChildren
  '/_authenticated/teams': typeof AuthenticatedTeamsRouteRouteWithChildren
  '/_authenticated/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/_guest/login': typeof GuestLoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/artifacts/$artifactId': typeof AuthenticatedArtifactsArtifactIdRoute
  '/_authenticated/teams/$teamId': typeof AuthenticatedTeamsTeamIdRoute
  '/_authenticated/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/_authenticated/artifacts/': typeof AuthenticatedArtifactsIndexRoute
  '/_authenticated/teams/': typeof AuthenticatedTeamsIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/artifacts'
    | '/teams'
    | '/users'
    | '/login'
    | '/'
    | '/artifacts/$artifactId'
    | '/teams/$teamId'
    | '/users/$userId'
    | '/artifacts/'
    | '/teams/'
    | '/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/artifacts/$artifactId'
    | '/teams/$teamId'
    | '/users/$userId'
    | '/artifacts'
    | '/teams'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_guest'
    | '/_authenticated/artifacts'
    | '/_authenticated/teams'
    | '/_authenticated/users'
    | '/_guest/login'
    | '/_authenticated/'
    | '/_authenticated/artifacts/$artifactId'
    | '/_authenticated/teams/$teamId'
    | '/_authenticated/users/$userId'
    | '/_authenticated/artifacts/'
    | '/_authenticated/teams/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_authenticated/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/teams': {
      id: '/_authenticated/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AuthenticatedTeamsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/artifacts': {
      id: '/_authenticated/artifacts'
      path: '/artifacts'
      fullPath: '/artifacts'
      preLoaderRoute: typeof AuthenticatedArtifactsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedUsersRouteRoute
    }
    '/_authenticated/teams/': {
      id: '/_authenticated/teams/'
      path: '/'
      fullPath: '/teams/'
      preLoaderRoute: typeof AuthenticatedTeamsIndexRouteImport
      parentRoute: typeof AuthenticatedTeamsRouteRoute
    }
    '/_authenticated/artifacts/': {
      id: '/_authenticated/artifacts/'
      path: '/'
      fullPath: '/artifacts/'
      preLoaderRoute: typeof AuthenticatedArtifactsIndexRouteImport
      parentRoute: typeof AuthenticatedArtifactsRouteRoute
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdRouteImport
      parentRoute: typeof AuthenticatedUsersRouteRoute
    }
    '/_authenticated/teams/$teamId': {
      id: '/_authenticated/teams/$teamId'
      path: '/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof AuthenticatedTeamsTeamIdRouteImport
      parentRoute: typeof AuthenticatedTeamsRouteRoute
    }
    '/_authenticated/artifacts/$artifactId': {
      id: '/_authenticated/artifacts/$artifactId'
      path: '/$artifactId'
      fullPath: '/artifacts/$artifactId'
      preLoaderRoute: typeof AuthenticatedArtifactsArtifactIdRouteImport
      parentRoute: typeof AuthenticatedArtifactsRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedArtifactsRouteRouteChildren {
  AuthenticatedArtifactsArtifactIdRoute: typeof AuthenticatedArtifactsArtifactIdRoute
  AuthenticatedArtifactsIndexRoute: typeof AuthenticatedArtifactsIndexRoute
}

const AuthenticatedArtifactsRouteRouteChildren: AuthenticatedArtifactsRouteRouteChildren =
  {
    AuthenticatedArtifactsArtifactIdRoute:
      AuthenticatedArtifactsArtifactIdRoute,
    AuthenticatedArtifactsIndexRoute: AuthenticatedArtifactsIndexRoute,
  }

const AuthenticatedArtifactsRouteRouteWithChildren =
  AuthenticatedArtifactsRouteRoute._addFileChildren(
    AuthenticatedArtifactsRouteRouteChildren,
  )

interface AuthenticatedTeamsRouteRouteChildren {
  AuthenticatedTeamsTeamIdRoute: typeof AuthenticatedTeamsTeamIdRoute
  AuthenticatedTeamsIndexRoute: typeof AuthenticatedTeamsIndexRoute
}

const AuthenticatedTeamsRouteRouteChildren: AuthenticatedTeamsRouteRouteChildren =
  {
    AuthenticatedTeamsTeamIdRoute: AuthenticatedTeamsTeamIdRoute,
    AuthenticatedTeamsIndexRoute: AuthenticatedTeamsIndexRoute,
  }

const AuthenticatedTeamsRouteRouteWithChildren =
  AuthenticatedTeamsRouteRoute._addFileChildren(
    AuthenticatedTeamsRouteRouteChildren,
  )

interface AuthenticatedUsersRouteRouteChildren {
  AuthenticatedUsersUserIdRoute: typeof AuthenticatedUsersUserIdRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedUsersRouteRouteChildren: AuthenticatedUsersRouteRouteChildren =
  {
    AuthenticatedUsersUserIdRoute: AuthenticatedUsersUserIdRoute,
    AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  }

const AuthenticatedUsersRouteRouteWithChildren =
  AuthenticatedUsersRouteRoute._addFileChildren(
    AuthenticatedUsersRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedArtifactsRouteRoute: typeof AuthenticatedArtifactsRouteRouteWithChildren
  AuthenticatedTeamsRouteRoute: typeof AuthenticatedTeamsRouteRouteWithChildren
  AuthenticatedUsersRouteRoute: typeof AuthenticatedUsersRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedArtifactsRouteRoute:
    AuthenticatedArtifactsRouteRouteWithChildren,
  AuthenticatedTeamsRouteRoute: AuthenticatedTeamsRouteRouteWithChildren,
  AuthenticatedUsersRouteRoute: AuthenticatedUsersRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface GuestRouteRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
